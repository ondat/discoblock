apiVersion: v1
kind: Namespace
metadata:
  labels:
    control-plane: controller-manager
  name: system
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: controller-manager
  namespace: system
  labels:
    control-plane: controller-manager
spec:
  selector:
    matchLabels:
      app: discoblocks
      app.kubernetes.io/component: discoblocks
  replicas: 1
  template:
    metadata:
      annotations:
        kubectl.kubernetes.io/default-container: manager
      labels:
        control-plane: controller-manager
    spec:
      # We have to disable enforment because of metrics proxy nixery image
      # securityContext:
      #   runAsNonRoot: true
      containers:
      - command:
        - /manager
        args:
        - --leader-elect
        image: controller:latest
        name: manager
        env:
          - name: SUPPORTED_CSI_DRIVERS
            value: "ebs.csi.aws.com"
          - name: SCHEDULER_STRICT_MODE
            value: "true"
          - name: MUTATOR_STRICT_MODE
            value: "true"
        securityContext:
          allowPrivilegeEscalation: false
        volumeMounts:
          - name: config-volume
            mountPath: /etc/kubernetes/discoblocks-scheduler
          - name: metrics-cert
            mountPath: /tmp/k8s-webhook-server/metrics-certs
            readOnly: true
        livenessProbe:
          httpGet:
            path: /healthz
            port: 8081
          initialDelaySeconds: 15
          periodSeconds: 20
        readinessProbe:
          httpGet:
            path: /readyz
            port: 8081
          initialDelaySeconds: 5
          periodSeconds: 10
        resources:
          requests:
            cpu: 20m
            memory: 256Mi
      - name: metrics-proxy
        # Set runAsNonRoot to true once image has replaced
        image: nixery.dev/shell/frp
        command:
        - sh
        - -c
        - |
          cat <<EOF > /tmp/frps.ini
          [common]
          ; log_level = trace
          disable_log_color = true
          bind_port = 63535
          proxy_bind_addr = 127.0.0.1
          enable_prometheus = true
          user_conn_timeout = 5
          max_ports_per_client = 1
          max_pool_count = 1
          heartbeat_timeout = 10
          detailed_errors_to_client = true
          dashboard_addr = 127.0.0.1
          dashboard_port = 8000
          tls_only = true
          tls_enable = true
          tls_cert_file = /tmp/k8s-webhook-server/metrics-certs/tls.crt
          tls_key_file = /tmp/k8s-webhook-server/metrics-certs/tls.key
          tls_trusted_ca_file = /tmp/k8s-webhook-server/metrics-certs/ca.crt
          EOF
          trap exit SIGTERM ;
          while true; do frps -c /tmp/frps.ini & c=$! wait $c; done
        securityContext:
          privileged: false
        volumeMounts:
        - mountPath: /tmp/k8s-webhook-server/metrics-certs
          name: metrics-cert
          readOnly: true
        ports:
        - containerPort: 63535
          protocol: TCP
        resources:
          requests:
            cpu: 10m
            memory: 128Mi
      serviceAccountName: controller-manager
      terminationGracePeriodSeconds: 10
      volumes:
        - name: config-volume
          configMap:
            name: discoblocks-scheduler
        - name: metrics-cert
          secret:
            defaultMode: 420
            secretName: discoblocks-metrics-cert
